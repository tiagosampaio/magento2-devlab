#!/bin/bash

SILENT=0

while getopts 'v:s' opt
do
  case $opt in
    s) SILENT=1
      ;;
    v) MAGE_VERSION=$OPTARG
      ;;
    *) echo "Try it again."
      ;;
  esac
done

FILENAME=$MAGE_VERSION.tar.gz
ARCHIVE_URL="https://github.com/tiagosampaio/magento-opensource-releases/archive"
DOWNLOAD_URL="$ARCHIVE_URL/$FILENAME"

[ -z "$MAGE_VERSION" ] && echo "Please specify the version to download (ex. 2.3.2)" && exit
#curl -L http://pubfiles.nexcess.net/magento/ce-packages/magento2-$1.tar.gz | tar xzf - -o -C .
# docker-compose exec php /bin/bash -c 'curl -L http://pubfiles.nexcess.net/magento/ce-packages/magento2-$1.tar.gz | tar xzf - -o -C /var/www/html/magento2'

VAR_DIR="var"
MAGE_RELEASES_DIR="$VAR_DIR/magento/releases"

print()
{
  if [[ $SILENT == 0 ]]; then
    echo $1
  fi
}

check_dir()
{
    if ! [[ -d "$MAGE_RELEASES_DIR" ]]; then
        mkdir -p "$MAGE_RELEASES_DIR"
    fi
}

download()
{
    FINAL_FILE="$MAGE_RELEASES_DIR/$FILENAME"

    if ! [[ -f "$FINAL_FILE" ]]; then
        print "Checking availability..."
        RESPONSE=$(curl -L -s -o /dev/null -w "%{HTTP_CODE}" "$DOWNLOAD_URL")

        if [ "$RESPONSE" == "404" ]; then
            print "The version $MAGE_VERSION of Magento Open Source is not available for download."
            exit 0
        fi

        print "Starting the download..."
        curl -L "$DOWNLOAD_URL" -o "$FINAL_FILE"
    else
        print "The version $MAGE_VERSION of Magento Open Source is already downloaded."
    fi
}

check_dir
download
